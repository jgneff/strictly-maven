# snapcraft.yaml - builds a Snap package of the Apache Maven build tool
# Copyright 2021-2025 John Neffenger
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: strictly-maven
title: Strictly Maven
summary: Apache Mavenâ„¢ in a strictly-confined snap
description: |
  Apache Maven is a build automation tool used primarily for Java
  projects. Maven can also be used to build and manage projects
  written in C#, Ruby, Scala, and other languages. Maven projects
  are configured by a file with a Project Object Model (pom.xml).

  This package provides the latest release of Maven built directly
  from its source code on GitHub. If the OpenJDK Snap package is
  also installed, this package connects to it automatically for the
  location of its Java Development Kit.

  This Snap package is strictly confined, running in complete isolation
  with only limited access to your system. For important information
  about running Maven in a confined environment, see the README file
  for this package on GitHub:

  https://github.com/jgneff/strictly-maven

  This is a convenience binary of the Maven tool and not a release
  by the Apache Software Foundation. For official releases, see:

  https://maven.apache.org

  Apache Maven and the Maven logo are either registered trademarks or
  trademarks of the Apache Software Foundation in the United States
  and/or other countries.

adopt-info: maven
license: Apache-2.0

base: core24
grade: stable
confinement: strict

platforms:
  all:
    build-on: [amd64]
    build-for: [all]

slots:
  maven-3-1804:
    interface: content
    read: [$SNAP/maven]
  maven-3-2404:
    interface: content
    read: [$SNAP/maven]

plugs:
  jdk-24-1804:
    interface: content
    target: $SNAP/jdk

apps:
  strictly-maven:
    command: bin/maven.sh
    plugs: [home, network]

parts:
  dump:
    plugin: dump
    source: .
    source-type: local
    stage: [bin, conf]

  maven:
    plugin: nil
    build-packages:
    - git
    - maven
    - openjdk-17-jre-headless
    override-pull: |
      version=3.9.10
      gitrepo=https://github.com/apache/maven.git

      # Sets the project version and clones the source repository by its tag
      craftctl set version="$version"
      git clone --branch "maven-$version" --depth 1 $gitrepo "$CRAFT_PART_SRC"
    override-build: |
      # Gets the host and port from a proxy URL
      #   $1 = the proxy URL, such as "http://10.10.10.1:8222/"
      getproxy () {
          # Parses URL with Bash or Dash shell parameter expansion
          tail=${1#http*://}
          head=${tail%%/*}
          host=${head%:*}
          port=${head##*:}
      }

      # Sets Java networking properties when using a proxy server
      proxies=""
      if [ -n "${http_proxy:-}" ]; then
          getproxy "$http_proxy"
          proxies="-Dhttp.proxyHost=$host -Dhttp.proxyPort=$port"
      fi
      if [ -n "${https_proxy:-}" ]; then
          getproxy "$https_proxy"
          proxies="$proxies -Dhttps.proxyHost=$host -Dhttps.proxyPort=$port"
      fi

      # Builds Maven
      export MAVEN_OPTS="$proxies"
      mvn --batch-mode --strict-checksums \
          --define distributionTargetDir="$CRAFT_PART_INSTALL/maven" \
          --quiet --show-version package

      # Patches the default location of the local repository
      cp "$CRAFT_PROJECT_DIR/conf/settings-global.xml" \
          "$CRAFT_PART_INSTALL/maven/conf/settings.xml"
